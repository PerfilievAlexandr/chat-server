version: '3'

volumes:
  postgres_volume:

services:
  pg:
    image: postgres:14-alpine3.17
    environment:
      - "POSTGRES_DB=${DB_NAME}"
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      - chat-network

  zookeeper:
    container_name: zookeeper-chat
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - chat-network

  kafka:
    container_name: kafka-chat
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - chat-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-chat
    ports:
      - "8000:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - chat-network

  migrator:
    build:
      context: .
      dockerfile: migration.Dockerfile
    restart: on-failure
    environment:
      DB_HOST: pg

networks:
  chat-network: